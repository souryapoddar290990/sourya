library(lubridate)
library(randomForest)
clipwrite <- function(x){write.table(x,"clipboard",sep='~',row.names=F)}
misclassification <- function(data,th){
data$flag <- ifelse(data$pred_1 > th, 1, 0)
err <- sum(data$target != data$flag)/nrow(data)
return(err)
}
setwd('/home/leaf/Music/Untitled Folder/tc/zendrive/')
lbl1 <- read.csv("a.lbl.csv")
lbl2 <- read.csv("b.lbl.csv")
lbl2 <- read.csv("m.lbl.csv")
lbl3 <- read.csv("p.lbl.csv")
lbl <- rbind(lbl1,lbl2,lbl3)
lbl$timestamp <- lbl$timestamp.ms. - min(lbl$timestamp.ms.)
names(lbl)[2] <- "target"
sen1 <- read.csv("a.sensor.csv")
sen2 <- read.csv("m.sensor.csv")
sen3 <- read.csv("p.sensor.csv")
sen$timestamp <- sen$timestamp.ms. - min(lbl$timestamp.ms.)
sen <- rbind(sen1,sen2,sen3)
sen$timestamp <- sen$timestamp.ms. - min(lbl$timestamp.ms.)
lbl_ord <- lbl[with(lbl, order(timestamp)), ]
sen_ord <- sen[with(sen, order(timestamp)), ]
shake <- 0
for(i in 1:(nrow(lbl_ord)/2))
{sub <- subset(sen_ord$timestamp, sen_ord$timestamp>lbl_ord$timestamp[2*i-1] & sen_ord$timestamp<=lbl_ord$timestamp[2*i])
shake <- c(shake, sub)}
sen_ord$target <- ifelse(sen_ord$timestamp %in% shake, 1, 0)
sen_ord$acc <- sqrt((sen_ord$acceleration_x.g.)^2 + (sen_ord$acceleration_y.g.)^2 + (sen_ord$acceleration_z.g.)^2)
sen_ord$vel <- sqrt((sen_ord$angular_velocity_x.rad.sec.)^2 + (sen_ord$angular_velocity_y.rad.sec.)^2 + (sen_ord$angular_velocity_z.rad.sec.)^2)
vars <- data.frame("vars"=setdiff(names(sen_ord), c("timestamp.ms.","timestamp","target")), stringsAsFactors = F)
sen_ord_2 <- sen_ord[-1,]
for(i in 1:nrow(vars))
sen_ord_2[, paste0(vars$vars[i],"_chng")] <- diff(sen_ord[, paste0(vars$vars[i])])
set.seed(1234)
seqn <- sample(nrow(sen_ord_2), 0.7*nrow(sen_ord_2), replace=F)
train_data <- sen_ord_2[seqn, ]
test_data <- sen_ord_2[-seqn, ]
vars2 <- data.frame("vars"=setdiff(names(train_data), c("timestamp.ms.","timestamp","target")), stringsAsFactors = F)
corr_list <- data.frame()
for(i in 1:(nrow(vars2)-1))
for(j in (i+1):nrow(vars2))
{ corr_list[nrow(corr_list)+1, "var1"] <- vars2$vars[i]
corr_list[nrow(corr_list), "var2"] <- vars2$vars[j]
corr_list[nrow(corr_list), "corr"] <- cor(train_data[,paste0(vars2$vars[i])],train_data[,paste0(vars2$vars[j])])
}
high_corr <- subset(corr_list, abs(corr_list$corr)>0.75)
var_drop <- c("angular_velocity_y.rad.sec.","angular_velocity_y.rad.sec._chng")
vars3 <- data.frame("variable"=setdiff(names(train_data),
c(var_drop,"timestamp.ms.","timestamp")),stringsAsFactors = F)
train_data_2 <- train_data[, names(train_data) %in% vars3$variable]
for(i in 1:nrow(vars3))
vars3$cor[i] <- cor(train_data_2$target, train_data_2[,vars3$variable[i]])
vars3$abs_cor <- abs(vars3$cor)
rf_model <- randomForest(as.factor(target)~., data=train_data_2, mtry=5, ntree=50, nodesize=20, do.trace=T)
rf_model$importance
set.seed(123)
seqn <- sample(nrow(sen_ord_2), 0.7*nrow(sen_ord_2), replace=F)
train_data <- sen_ord_2[seqn, ]
test_data <- sen_ord_2[-seqn, ]
rf_model <- randomForest(as.factor(target)~., data=train_data_2, mtry=5, ntree=50, nodesize=20, do.trace=T)
rf_model$importance
set.seed(12)
seqn <- sample(nrow(sen_ord_2), 0.7*nrow(sen_ord_2), replace=F)
train_data <- sen_ord_2[seqn, ]
test_data <- sen_ord_2[-seqn, ]
rf_model <- randomForest(as.factor(target)~., data=train_data_2, mtry=5, ntree=50, nodesize=20, do.trace=T)
rf_model$importance
